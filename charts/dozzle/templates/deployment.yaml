apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      serviceAccountName: pod-viewer
      containers:
      - name: {{ .Values.name }}
        image: amir20/dozzle:latest
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.targetPort }}
        env:
        - name: DOZZLE_LEVEL
          value: info
        - name: DOZZLE_MODE
          value: "k8s"
        volumeMounts:
        - name: {{ .Values.name }}-config
          mountPath: /config
      volumes:
        - name: {{ .Values.name }}-config
          persistentVolumeClaim:
            claimName: {{ .Values.name }}-config-pvc-synology
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.name }}-config-pvc-synology
  labels: 
    recurring-job.longhorn.io/default: enabled
    recurring-job.longhorn.io/remote: enabled
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: synology-csi-iscsi-delete
  resources:
    requests:
      storage: 2G
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-viewer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-viewer-role
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-viewer-binding
subjects:
  - kind: ServiceAccount
    name: pod-viewer
    namespace: {{ .Values.name }}
roleRef:
  kind: ClusterRole
  name: pod-viewer-role
  apiGroup: rbac.authorization.k8s.io