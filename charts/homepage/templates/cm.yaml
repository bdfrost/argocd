apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
data:
  kubernetes.yaml: |
    mode: cluster
    ingress: true
    traefik: true
    gateway: true
  settings.yaml: |
    title: Homelab Dashboard
    background:
      image: images/homepage.png
      brightness: 50
      opacity: 25
    providers:
      openweathermap: openweathermapapikey
      weatherapi: weatherapiapikey
    logo: logo.png
    favicon: favicon.png
    theme: dark
    showThemeToggle: true
    defaultWidgetView: grid
    layout:
      Homelab:
        header: true
      Applications:
        style: column
        columns: 3
        header: true
      Arr:
        style: column
        columns: 3
        header: true
      Network:
        style: column
        columns: 2
        header: true
    gridsterOptions:
      minCols: 3
      maxCols: 6
      minRows: 3
      maxRows: 6
      defaultSizeX: 2
      defaultSizeY: 2
      mobileBreakpoint: 640
      useBodyForMobile: true
      resizable:
        enabled: true
      draggable:
        enabled: true
  custom.css: ""
  custom.js: ""
  bookmarks.yaml: |
    - Bookmarks:
      - Allrecipes:
        - icon: https://i.imgur.com/cPUE6a0.png
          href: https://www.allrecipes.com/
      - Amazon:
        - icon: amazon-light.png
          href: https://amazon.com/
    - Developer:
      - Github:
        - abbr: GH
          href: https://github.com/
      - Dozzle:
        - href: http://dozzle.frost.haus
          abbr: DZ
    - Social:
      - Reddit:
        - icon: reddit.png
          href: https://reddit.com/
          description: The front page of the internet
    - Entertainment:
      - YouTube:
        - abbr: YT
          href: https://youtube.com/
  services.yaml: |
    - Arr:
        - Calendar:
            icon: calendar.png
            # href: https://calendar.frost.haus
            # ping: calendar.frost.haus
            widget:
              type: calendar
              firstDayInWeek: sunday # optional - defaults to monday
              view: monthly # optional - possible values monthly, agenda
              maxEvents: 10 # optional - defaults to 10
              showTime: true # optional - show time for event happening today - defaults to false
              timezone: America/Chicago # optional and only when timezone is not detected properly (slightly slower performance) - force timezone for ical events (if it's the same - no change, if missing or different in ical - will be converted to this timezone)
              integrations: # optional
                - type: sonarr
                  service_group: Arr
                  service_name: Sonarr
                  color: teal # optional
                  baseUrl: https://sonarr.frost.haus
                  params:
                    unmonitored: true # optional - defaults to false, used with *arr stack    
                - type: radarr
                  service_group: Arr
                  service_name: Radarr
                  color: orange
                  baseUrl: https://radarr.frost.haus
                  params:
                    unmonitored: true # optional - defaults to false, used with *arr stack
              # - type: calendar
              #   view: agenda
              #   maxEvents: 10 # optional - defaults to 10
              #   showTime: true # optional - show time for event happening today - defaults to false
              #   previousDays: 3 # optional - shows events since three days ago - defaults to 0
              #   integrations: # same as in Monthly view example     
        - Sabnzbd:
            icon: sabnzbd.png
            href: https://sabnzbd.frost.haus
            widget:
              type: sabnzbd
              url: https://sabnzbd.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_SABNZBD_APIKEY{{ "}}" }}"
        - Sonarr:
            icon: sonarr.png
            href: https://sonarr.frost.haus
            widget:
              type: sonarr
              url: https://sonarr.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_SONARR_APIKEY{{ "}}" }}"
        - Radarr:
            icon: radarr.png
            href: https://radarr.frost.haus
            widget:
              type: radarr
              url: https://radarr.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_RADARR_APIKEY{{ "}}" }}"
        - Prowlarr:
            icon: prowlarr.png
            href: https://prowlarr.frost.haus
            widget:
              type: prowlarr
              url: https://prowlarr.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_PROWLARR_APIKEY{{ "}}" }}"
        - Bazarr:
            icon: bazarr.png
            href: https://bazarr.frost.haus
            widget:
              type: bazarr
              url: https://bazarr.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_BAZARR_APIKEY{{ "}}" }}"
        - Overseerr:
            icon: overseerr.png
            href: https://overseerr.frost.haus
            widget:
              type: overseerr
              url: https://overseerr.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_OVERSEERR_APIKEY{{ "}}" }}"
        - Plex:
            icon: plex.png
            href: https://peppers.frost.haus
            description: Watch movies and TV shows.
            # server: peppers.frost.haus
            # container: plex
            widget:
              type: plex
              url: https://peppers.frost.haus
              key: {{ "{{" }}HOMEPAGE_VAR_PLEX_APIKEY{{ "}}" }}
        - Tautili:
            icon: mdi-folder-play
            href: https://tautulli.frost.haus
            description: plex stats
            container: tautulli
            widget:
              type: tautulli
              url: https://tautulli.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_TAUTULLI_APIKEY{{ "}}" }}"
    - Network:
        - dns1:
            icon: mdi-pi-hole
            href: http://dns1.brainboy.local.lan/admin
            description: network ad blocking
            widget:
                type: pihole
                url: http://dns1.brainboy.local.lan
                key: "{{ "{{" }}HOMEPAGE_VAR_DNS1_APIKEY{{ "}}" }}"
                version: 6 # required if running v6 or higher, defaults to 5
        - dns2:
            icon: mdi-pi-hole
            href: http://dns2.brainboy.local.lan/admin
            description: network ad blocking
            ping: http://dns2.brainboy.local.lan
            widget:
                type: pihole
                url: http://dns2.brainboy.local.lan
                key: "{{ "{{" }}HOMEPAGE_VAR_DNS2_APIKEY{{ "}}" }}"
                version: 6 # required if running v6 or higher, defaults to 5
        # - Speedtest Tracker:
        #     icon: mdi-speedometer
        #     href: https://speedtest.frost.haus
        #     description: speedtest
        #     ping: speedtest.frost.haus
        #     container: speedtest
        #     widget:
        #         type: speedtest
        #         url: http://IPADDRESS  
        - Uptime Kuma:
            icon: mdi-bell
            href: https://uptime-kuma.frost.haus
            description: uptime monitoring
            container: uptime-kuma
            widget:
              type: uptimekuma
              url: https://uptime-kuma.frost.haus/
              slug: default
        - Netdata:
            icon: netdata.png
            href: https://netdata.frost.haus
            description: system monitoring
            container: netdata
            widget:
              type: netdata
              url: https://netdata.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_DNS2_APIKEY{{ "}}" }}"
        # - Datastation:
        #     icon: datastation.png
        #     href: https://datastation.frost.haus
        #     description: data analytics
        #     ping: datastation.frost.haus
        #     container: datastation
        #     widget:
        #       type: datastation
        #       url: https://datastation.frost.haus
        #       key: datastationkeyhere
        #       username: username
        #       password: password
        #       volume: volume_N # optional
    - Applications: 
        - Prometheus:
            icon: prometheus.png
            href: https://prometheus.frost.haus
            description: metrics & alerting
            container: prometheus
            widget:
              type: prometheus
              url: https://prometheus.frost.haus
        # - Grafana:
        #     icon: grafana.png
        #     href: https://grafana.frost.haus
        #     description: analytics & monitoring
        #     container: grafana
        #     widget:
        #       type: grafana
        #       url: https://grafana.frost.haus
        #       version: 2 # optional, default is 1
        #       alerts: alertmanager # optional, default is grafana
        #       username: username
        #       password: password
        #       key: longlivedaccesstokenhere
        # - Linkwarden:
        #     icon: linkwarden.png
        #     href: https://linkwarden.frost.haus
        #     description: password manager
        #     ping: linkwarden.frost.haus
        #     container: linkwarden
        #     widget:
        #       type: linkwarden
        #       url: https://linkwarden.frost.haus
        #       key: longlivedaccesstokenhere
        # - Cloudflare Tunnel:
        #     icon: cloudflaretunnel.png
        #     href: https://dash.cloudflare.com
        #     description: cloudflare tunnel management
        #     ping: dash.cloudflare.com
        #     widget:
        #       type: cloudflared
        #       accountid: accountid # from zero trust dashboard url e.g. https://one.dash.cloudflare.com/<accountid>/home/quick-start
        #       tunnelid: tunnelid # found in tunnels dashboard under the tunnel name
        #       key: cloudflareapitoken # api token with `Account.Cloudflare Tunnel:Read` https://dash.cloudflare.com/profile/api-tokens
        - Home Assistant:
            icon: home-assistant.png
            href: http://homeassistant.brainboy.local.lan:8123
            description: Home automation
            ping: homeassistant.brainboy.local.lan
            # container: home-assistant
            widget:
              type: homeassistant
              url: http://homeassistant.brainboy.local.lan:8123
              key: "{{ "{{" }}HOMEPAGE_VAR_HOMEASSISTANT_APIKEY{{ "}}" }}"
              custom:
                # - state: sensor.total_power
                # - state: sensor.total_energy_today
                #   label: energy today
                - state: weather.forecast_home
                  label: wind speed
                  value: "{attributes.wind_speed} {attributes.wind_speed_unit}"
        - Argo CD:
            icon: argocd.png
            href: https://argocd.frost.haus
            container: argocd-server
            widget:
              type: argocd
              url: https://argocd.frost.haus
              key: "{{ "{{" }}HOMEPAGE_VAR_ARGOCD_APIKEY{{ "}}" }}"
        - Portainer:
            icon: portainer.png
            href: https://portainer.frost.haus
            container: portainer
            widget:
              type: portainer
              url:  http://portainer.frost.haus
              env: 1
              key: "{{ "{{" }}HOMEPAGE_VAR_DNS2_APIKEY{{ "}}" }}"
        - Proxmox:
            icon: proxmox.png
            href: https://pve1.frost.haus:8006
            ping: https://pve1.frost.haus:8006
            widget:
              type: proxmox
              url: https://pve1.frost.haus:8006
              username: root@pam!homepage.io
              password: "{{ "{{" }}HOMEPAGE_VAR_PROXMOX_APIKEY{{ "}}" }}"
              # node: pve1
              fields: ["vms", "lxc"]
        - Proxmox Backups Server:
            icon: proxmox.png
            href: https://pbs.frost.haus:8007
            ping: https://pbs.frost.haus:8007
            widget:
              type: proxmox
              url: https://pbs.frost.haus:8007
              username: root@pam!homepage.io
              password: "{{ "{{" }}HOMEPAGE_VAR_PBS_APIKEY{{ "}}" }}"
              node: pbs
              fields: ["backups"]
              datastore: datastore_name #optional; if ommitted, will display a combination of all datastores used / total         
  widgets.yaml: |
    - kubernetes:
        cluster:
          show: false
          cpu: true
          memory: true
          showLabel: true
          label: "k8s-cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    # - resources:
    #     backend: resources
    #     expanded: true
    #     cpu: true
    #     memory: true
    #     network: default
    - search:
        provider: duckduckgo
        target: _blank
    # - logo:
    #     href: https://example.com
    #     target: _blank # Optional, can be set in settings
  docker.yaml: ""
  proxmox.yaml: |
    - HomeAssistant:
      icon: home-assistant.png
      href: http://homeassistant.brainboy.local.lan:8123/
      description: Home automation
      proxmoxNode: pve2.frost.haus
      proxmoxVMID: 100
    - K8s-n1:
      icon: k8s.png
      description: K8s Node 1
      proxmoxNode: pve1.frost.haus
      proxmoxVMID: 107
    - K8s-n2:
      icon: k8s.png
      description: K8s Node 2
      proxmoxNode: pve2.frost.haus
      proxmoxVMID: 104
    - K8s-n3:
      icon: k8s.png
      description: K8s Node 3
      proxmoxNode: pve3.frost.haus
      proxmoxVMID: 103
    - K8s-c1:
      icon: k8s.png
      description: K8s Controller Node
      proxmoxNode: pve3.frost.haus
      proxmoxVMID: 106