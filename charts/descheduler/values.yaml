replicaCount: 1
name: descheduler
puid: 1026
pgid: 100

descheduler:
  kind: CronJob
  image:
    repository: registry.k8s.io/descheduler/descheduler
    tag: ""
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 500m
      memory: 256Mi
    limits:
      memory: 256Mi
  ports:
    - containerPort: 10258
      protocol: TCP
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
  cronJobApiVersion: "batch/v1"
  schedule: "*/2 * * * *"
  suspend: false
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  deschedulingInterval: 5m
  replicas: 1
  command:
  - "/bin/descheduler"
  cmdOptions:
    v: 3
  deschedulerPolicyAPIVersion: "descheduler/v1alpha2"
  deschedulerPolicy:
    nodeSelector: "kubernetes.io/hostname=k8s-n1,kubernetes.io/hostname=k8s-n2,kubernetes.io/hostname=k8s-n3"
    maxNoOfPodsToEvictPerNode: 10
    metricsProviders:
    - source: KubernetesMetrics
    profiles:
      - name: default
        pluginConfig:
          - name: DefaultEvictor
            args:
              ignorePvcPods: true
              evictLocalStoragePods: true
          - name: RemoveDuplicates
          - name: RemovePodsHavingTooManyRestarts
            args:
              podRestartThreshold: 100
              includingInitContainers: true
          - name: RemovePodsViolatingNodeAffinity
            args:
              nodeAffinityType:
              - requiredDuringSchedulingIgnoredDuringExecution
          - name: RemovePodsViolatingNodeTaints
          - name: RemovePodsViolatingInterPodAntiAffinity
          - name: RemovePodsViolatingTopologySpreadConstraint
          - name: LowNodeUtilization
            args:
              thresholds:
                cpu: 20
                memory: 20
                pods: 20
              targetThresholds:
                cpu: 50
                memory: 50
                pods: 50
        plugins:
          balance:
            enabled:
              - RemoveDuplicates
              - RemovePodsViolatingTopologySpreadConstraint
              - LowNodeUtilization
          deschedule:
            enabled:
              - RemovePodsHavingTooManyRestarts
              - RemovePodsViolatingNodeTaints
              - RemovePodsViolatingNodeAffinity
              - RemovePodsViolatingInterPodAntiAffinity
  priorityClassName: system-cluster-critical
  rbac:
    create: true
  serviceAccount:
    create: true
  livenessProbe:
    failureThreshold: 3
    httpGet:
      path: /healthz
      port: 10258
      scheme: HTTPS
    initialDelaySeconds: 3
    periodSeconds: 10
  service:
    enabled: false
  serviceMonitor:
    enabled: true
    insecureSkipVerify: true
    serverName: null